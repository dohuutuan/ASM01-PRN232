@page
@model _FE.Pages.News.IndexModel
@{
    ViewData["Title"] = "News Article Management";
}


    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">


<h2 class="page-title">News Article Management</h2>

<!-- 🔍 Toolbar -->
<div class="toolbar mb-3">
    <input type="text" id="searchTitle" placeholder="Search Title" class="form-control">
    <input type="text" id="searchAuthor" placeholder="Search Author" class="form-control">
    <select id="filterCategory" class="form-select">
        <option value="">All Categories</option>
    </select>
    <select id="filterStatus" class="form-select">
        <option value="">All Status</option>
        <option value="true">Active</option>
        <option value="false">Inactive</option>
    </select>
    <input type="date" id="filterFrom" class="form-control">
    <input type="date" id="filterTo" class="form-control">
    <button class="btn btn-primary" onclick="loadNews(1)">
        <i class="bi bi-search"></i> Search
    </button>
    <button class="btn btn-success" onclick="openModal()">
        <i class="bi bi-plus-lg"></i> Add News
    </button>
</div>

<!-- 📰 News Table -->
<table class="table table-bordered table-hover">
    <thead class="table-dark">
        <tr>
            <th>Title</th>
            <th>Category</th>
            <th>Tags</th>
            <th>Status</th>
            <th>Author</th>
            <th>Created Date</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="newsTableBody"></tbody>
</table>

<!-- Pagination -->
<div class="pagination-container text-center">
    <ul class="pagination justify-content-center">
        <li class="page-item"><a class="page-link" href="#" id="prevPage">Prev</a></li>
        <li class="page-item"><span class="page-link" id="pageInfo">1 / 1</span></li>
        <li class="page-item"><a class="page-link" href="#" id="nextPage">Next</a></li>
    </ul>
</div>

<!-- Modal -->
<div class="modal fade" id="newsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="newsForm">
                <div class="modal-header">
                    <h5 class="modal-title">News Article</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="newsId">
                    <input type="text" id="newsTitle" placeholder="Title" class="form-control mb-2" required>
                    <input type="text" id="newsHeadline" placeholder="Headline" class="form-control mb-2">
                    <textarea id="newsContent" placeholder="Content" class="form-control mb-2" rows="5"></textarea>
                    <input type="text" id="newsSource" placeholder="Source" class="form-control mb-2">
                    <select id="newsCategory" class="form-select mb-2" required></select>
                    <select id="newsStatus" class="form-select mb-2">
                        <option value="true">Active</option>
                        <option value="false">Inactive</option>
                    </select>
                    <label>Tags</label>
                    <select id="newsTags" class="form-select mb-2" multiple></select>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script>
        const token = localStorage.getItem('jwt_token');
        let tagList = [];
        let categoryList = [];
        let currentPage = 1;
        let totalPages = 1;
        const pageSize = 3;

        function loadTags() {
            $.ajax({
                url: 'http://localhost:5053/api/Tag',
                type: 'GET',
                headers: { 'Authorization': 'Bearer ' + token },
                success: function(res) {
                    tagList = res.data;
                    const newsTags = $('#newsTags');
                    newsTags.empty();
                    tagList.forEach(t => newsTags.append(`<option value="${t.tagId}">${t.tagName}</option>`));
                }
            });
        }

        function loadCategories() {
            $.ajax({
                url: 'http://localhost:5053/api/Category',
                type: 'GET',
                headers: { 'Authorization': 'Bearer ' + token },
                success: function(res) {
                    categoryList = res.data;
                    const filterCategory = $('#filterCategory');
                    const newsCategory = $('#newsCategory');
                    filterCategory.empty().append('<option value="">All Categories</option>');
                    newsCategory.empty();
                    categoryList.forEach(c => {
                        filterCategory.append(`<option value="${c.categoryId}">${c.categoryName}</option>`);
                        newsCategory.append(`<option value="${c.categoryId}">${c.categoryName}</option>`);
                    });
                }
            });
        }

        function buildODataQuery(pageNumber) {
            const title = $('#searchTitle').val();
            const author = $('#searchAuthor').val();
            const category = $('#filterCategory').val();
            const status = $('#filterStatus').val();
            const from = $('#filterFrom').val();
            const to = $('#filterTo').val();

            let filters = [];
            if (title) filters.push(`contains(NewsTitle,'${title}')`);
            if (author) filters.push(`contains(CreatedByName,'${author}')`);
            if (category) filters.push(`CategoryId eq ${category}`);
            if (status) filters.push(`NewsStatus eq ${status}`);
            if (from) filters.push(`CreatedDate ge ${from}T00:00:00Z`);
            if (to) filters.push(`CreatedDate le ${to}T23:59:59Z`);

            let filterStr = filters.length > 0 ? `$filter=${filters.join(' and ')}` : '';
            const skip = (pageNumber - 1) * pageSize;
            let query = `?$count=true&$orderby=CreatedDate desc&$top=${pageSize}&$skip=${skip}`;

            if (filterStr) query += `&${filterStr}`;
            return query;
        }

        function loadNews(pageNumber) {
            currentPage = pageNumber;
            const query = buildODataQuery(pageNumber);

            $.ajax({
                url: 'http://localhost:5053/api/News' + query,
                type: 'GET',
                headers: { 'Authorization': 'Bearer ' + token },
                success: function(res) {
                    const newsList = res.value || res;
                    renderTable(newsList);
                    updatePagination();
                },
                error: function(err) {
                    console.error(err);
                    alert('Cannot load news');
                }
            });
        }

        function renderTable(list) {
            const tbody = $('#newsTableBody');
            tbody.empty();

            if (list.length === 0) {
                tbody.append('<tr><td colspan="7" class="text-center">No news found</td></tr>');
                return;
            }

            list.forEach(n => {
                const tags = n.tagIds?.map(tid => tagList.find(t => t.tagId === tid)?.tagName).filter(Boolean).join(', ') || '';
                const tr = `<tr>
                    <td>${n.newsTitle}</td>
                    <td>${n.categoryName}</td>
                    <td>${tags}</td>
                    <td>${n.newsStatus ? 'Active' : 'Inactive'}</td>
                    <td>${n.createdByName}</td>
                    <td>${new Date(n.createdDate).toLocaleDateString()}</td>
                    <td>
                        <button class="btn btn-sm btn-warning btn-icon" data-bs-toggle="tooltip" title="Edit" onclick="editNews('${n.newsArticleId}')">
                            <i class="bi bi-pencil-square"></i>
                        </button>
                        <button class="btn btn-sm btn-danger btn-icon" data-bs-toggle="tooltip" title="Delete" onclick="deleteNews('${n.newsArticleId}')">
                            <i class="bi bi-trash"></i>
                        </button>
                        <button class="btn btn-sm btn-info btn-icon" data-bs-toggle="tooltip" title="Duplicate" onclick="duplicateNews('${n.newsArticleId}')">
                            <i class="bi bi-files"></i>
                        </button>
                    </td>
                </tr>`;
                tbody.append(tr);
            });

            // Kích hoạt tooltip
            $('[data-bs-toggle="tooltip"]').tooltip();
        }

        // Modal & CRUD Functions
        function openModal() {
            $('#newsId').val('');
            $('#newsForm')[0].reset();
            $('#newsTags').val([]);
            $('#newsModal').modal('show');
        }

        // ... (các hàm editNews, deleteNews, duplicateNews giữ nguyên như cũ)
        // --------------------

        $(document).ready(function() {
            loadTags();
            loadCategories();
            loadNews(1);
        });
    </script>
}

<style>
    /* ---- Page Layout ---- */
    .page-title {
        margin-bottom: 25px;
        font-weight: 600;
        color: #222;
    }

    /* ---- Toolbar ---- */
    .toolbar {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        background: #f8f9fa;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 15px;
    }

        .toolbar .form-control,
        .toolbar .form-select {
            width: 180px;
            font-size: 0.95rem;
        }

        .toolbar .btn {
            height: 38px;
            font-weight: 500;
        }

    /* ---- Table ---- */
    .table {
        background: white;
        border-radius: 8px;
        overflow: hidden;
    }

        .table th, .table td {
            text-align: center;
            vertical-align: middle;
        }

    .table-hover tbody tr:hover {
        background-color: #f5f5f5;
    }

    /* ---- Icon Buttons ---- */
    .btn-icon {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 34px;
        height: 34px;
        border-radius: 6px;
        font-size: 1rem;
    }

    .btn-warning:hover {
        background-color: #e0a800 !important;
        color: white !important;
    }

    .btn-danger:hover {
        background-color: #bb2d3b !important;
    }

    .btn-info:hover {
        background-color: #138496 !important;
    }

    /* ---- Pagination ---- */
    .pagination-container {
        margin-top: 20px;
    }

    .page-link {
        color: #333;
        font-weight: 500;
    }

        .page-item.active .page-link,
        .page-link:hover {
            background-color: #007bff;
            color: white;
        }

    /* ---- Modal ---- */
    .modal-content {
        border-radius: 10px;
    }

    .modal-header {
        background: #007bff;
        color: white;
    }

    .modal-footer .btn-primary {
        background: #007bff;
    }
</style>
